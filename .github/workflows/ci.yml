# Namn på workflow som kommer att visas i GitHub Actions
name: CI Pipeline

# Workflow triggas automatiskt vid push eller pull request till main-branchen
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    # Kör jobben på en virtuell Ubuntu-maskin som tillhandahålls av GitHub
    runs-on: ubuntu-latest

    steps:
      # Klonar ner hela GitHub-repot till den virtuella miljön
      - name: Check out repository code
        uses: actions/checkout@v3

      # Installerar Java JDK version 17 via Temurin-distributionen
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Visar vilken Java-version som är installerad (för att verifiera att rätt version används)
      - name: Verify Java version
        run: java -version

      # Visar vilken Maven-version som används i pipeline (kan hjälpa vid felsökning)
      - name: Verify Maven version
        run: mvn -v

      # Cachar Maven-dependencies för att snabba upp framtida builds (så Maven inte behöver ladda ner allt varje gång)
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Kör byggprocessen med Maven: clean (rensa gamla filer) + install (kompilera, köra tester, paketera)
      # Flaggan -e visar fullständig felstacktrace vid fel
      # Flaggan -X aktiverar debug-läge för mer detaljerad loggning
      - name: Build and test with debug flags
        run: mvn clean install -e -X
